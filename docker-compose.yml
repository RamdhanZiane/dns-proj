services:
  bind9:
    build: 
      context: ./bind
      dockerfile: Dockerfile
    ports:
      - "1053:53/tcp"
      - "1053:53/udp"
      - "953:953/tcp"  # Expose rndc port
    volumes:
      - ./bind/config:/etc/bind:rw
      - ./bind/zones:/var/lib/bind:rw
      - bind9-cache:/var/cache/bind:rw
      - bind9-run:/var/run/named:rw
    cap_add:
      - NET_ADMIN
    user: bind
    restart: always
    environment:
      - BIND9_RANDOMIZE_PORT=yes  # Optional: Randomize DNS port for security
      
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    restart: always

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: dnsadmin
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: dns_manager
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dnsadmin -d dns_manager"]
      interval: 5s
      timeout: 5s
      retries: 5

  dns_manager:
    build:
      context: ./dns_manager
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      bind9:
        condition: service_started
      nginx-proxy-manager:
        condition: service_started
    volumes:
      - ./bind/zones:/zones
    environment:
      - DB_HOST=postgres
      - DB_USER=dnsadmin
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=dns_manager
      - NPM_API_URL=http://nginx-proxy-manager:81
      - NPM_EMAIL=${NPM_EMAIL}
      - NPM_PASSWORD=${NPM_PASSWORD}

  # Added a reload service to handle BIND9 reloads
  bind9_reloader:
    image: alpine:latest
    depends_on:
      - bind9
    volumes:
      - ./bind/config:/etc/bind
      - ./bind/zones:/var/lib/bind
    entrypoint: /bin/sh
    command: -c "apk add --no-cache bind-tools && while true; do inotifywait -e modify /etc/bind/zones.conf /var/lib/bind/*.zone && rndc reload; done"
    restart: unless-stopped

volumes:
  postgres_data:
  bind9-cache:
  bind9-run: